{"version":3,"sources":["components/Header.js","components/LocationMarker.js","components/LocationInfoBox.js","components/Map.js","star-spinner.gif","components/Loader.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","LocationMarker","lat","lng","category","onClick","icon","fireIcon","tornadoIcon","volcanoIcon","icebergIcon","LocationInfoBox","info","id","title","Map","eventData","center","zoom","useState","locationInfo","setLocationInfo","newCenter","setNewCenter","markers","map","ev","Array","isArray","geometries","coordinates","categories","handleClick","bootstrapURLKeys","key","defaultCenter","defaultZoom","defaultProps","Loader","src","spinner","alt","App","setEventData","loading","setLoading","useEffect","a","fetch","res","json","events","fetchEvents","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0086858b.chunk.js","sourcesContent":["const Header = () => {\n  return (\n    <div className=\"header\">\n      <h1>Earth Observatory Natural Events Tracker (Powered by NASA)</h1>\n    </div>\n  )\n}\n\nexport default Header\n","import { Icon } from \"@iconify/react\"\nimport fireIcon from \"@iconify/icons-mdi/fire\"\nimport tornadoIcon from \"@iconify-icons/noto-v1/tornado\"\nimport volcanoIcon from \"@iconify-icons/maki/volcano-15\"\nimport icebergIcon from \"@iconify-icons/openmoji/iceberg\"\n\nconst LocationMarker = ({ lat, lng, category, onClick }) => {\n  return (\n    <div className=\"location-marker\" onClick={onClick}>\n      {category === 8 ? (\n        <Icon icon={fireIcon} className=\"fire-icon\" />\n      ) : category === 10 ? (\n        <Icon icon={tornadoIcon} className=\"tornado-icon\" />\n      ) : category === 12 ? (\n        <Icon icon={volcanoIcon} className=\"volcano-icon\" />\n      ) : category === 15 ? (\n        <Icon icon={icebergIcon} className=\"iceberg-icon\" />\n      ) : null}\n    </div>\n  )\n}\n\nexport default LocationMarker\n","const LocationInfoBox = ({ info }) => {\n  return (\n    <div className=\"location-info\">\n      <h3>Event Location Info</h3>\n      <ul>\n        <li>\n          ID: <strong>{info.id}</strong>\n        </li>\n        <li>\n          TITLE: <strong>{info.title}</strong>\n        </li>\n      </ul>\n    </div>\n  )\n}\n\nexport default LocationInfoBox\n","import { useState } from \"react\"\nimport GoogleMapReact from \"google-map-react\"\nimport LocationMarker from \"./LocationMarker\"\nimport LocationInfoBox from \"./LocationInfoBox\"\n\nconst Map = ({ eventData, center, zoom }) => {\n  const [locationInfo, setLocationInfo] = useState(null)\n  const [newCenter, setNewCenter] = useState(center)\n\n  const handleClick = (ev) => {\n    setLocationInfo({ id: ev.id, title: ev.title })\n    setNewCenter({\n      lat: ev.geometries[0].coordinates[1],\n      lng: ev.geometries[0].coordinates[0],\n    })\n  }\n\n  const markers = eventData.map((ev) => {\n    if (!Array.isArray(ev.geometries[0].coordinates[0])) {\n      return (\n        <LocationMarker\n          key={ev.id}\n          lat={ev.geometries[0].coordinates[1]}\n          lng={ev.geometries[0].coordinates[0]}\n          category={ev.categories[0].id}\n          onClick={() => handleClick(ev)}\n        />\n      )\n    }\n    return null\n  })\n\n  return (\n    <div className=\"map\">\n      <GoogleMapReact\n        bootstrapURLKeys={{ key: \"AIzaSyCiPDBI-qFR8OvYDiwJvS9IBNaAPaJEZdw\" }}\n        defaultCenter={center}\n        defaultZoom={zoom}\n        center={newCenter}\n      >\n        {markers}\n      </GoogleMapReact>\n      {locationInfo && <LocationInfoBox info={locationInfo} />}\n    </div>\n  )\n}\n\nMap.defaultProps = {\n  center: {\n    lat: 23.6978,\n    lng: 122.9605,\n  },\n  zoom: 6,\n}\n\nexport default Map\n","export default __webpack_public_path__ + \"static/media/star-spinner.acf56dfe.gif\";","import spinner from \"../star-spinner.gif\"\n\nconst Loader = () => {\n  return (\n    <div className=\"loader\">\n      <img src={spinner} alt=\"Loading\" />\n      <h3>Fetching Data</h3>\n    </div>\n  )\n}\n\nexport default Loader\n","import { useState, useEffect } from \"react\"\nimport Header from \"./components/Header\"\nimport Map from \"./components/Map\"\nimport Loader from \"./components/Loader\"\n\nfunction App() {\n  const [eventData, setEventData] = useState([])\n  const [loading, setLoading] = useState(false)\n\n  useEffect(() => {\n    const fetchEvents = async () => {\n      setLoading(true)\n      const res = await fetch(\"https://eonet.sci.gsfc.nasa.gov/api/v2.1/events\")\n      const { events } = await res.json()\n      setEventData(events)\n      setLoading(false)\n    }\n\n    fetchEvents()\n  }, [])\n\n  return (\n    <div>\n      <Header />\n      {!loading ? <Map eventData={eventData} /> : <Loader />}\n    </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}